c = array(1, 2, "three", true, false)
print(c)
---
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" "$c"
+++
1
===
c = array(1, 2, "three", true, false)
print(c[2])
---
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" "${c[2]}"
+++
three
===
c = array(1, 2, "three", true, false)
print(c[4 - 2])
---
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" "${c[4 - 2]}"
+++
three
===
a = 2
c = array(1, 2, "three", true, false)
print(c[a])
---
a=$((2))
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" "${c["$a"]}"
+++
three
===
a = 4
c = array(1, 2, "three", true, false)
print(c[a - 2])
---
a=$((4))
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" "${c["$a" - 2]}"
+++
three
===
c = array(1, 2, "three", true, false)
print(len(c))
---
c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" ${#c[@]}
+++
5
===
import("./modules/arrays")
c = array(1, 2, "three", true, false)
print(arrays.length(pack(c)))
---
function arrays_length {
local arrays_a
local arrays_arr
arrays_arr="$1"
arrays_a=($@)
"echo" "-ne" ${#arrays_a[@]}
return
}

c=($((1)) $((2)) "three" $((1)) $((0)))
"echo" "-ne" $("arrays_length" ${c[@]})
+++
5
